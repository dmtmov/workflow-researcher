# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: tag, release, trigger deployment

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types:
      - closed

jobs:
  pre-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

  build:
    # if: ${{ github.event.pull_request.merged == true }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Create tag
        id: latesttag
        uses: anothrNick/github-tag-action@1.34.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: false

      - name: Create release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_ACCESS_TOKEN }}
        with:
          tag_name: ${{ steps.latesttag.outputs.tag }}
          release_name: Release ${{ steps.latesttag.outputs.tag }}
          draft: false
          prerelease: false

      - name: Wait on deploy
        uses: fountainhead/action-wait-for-check@v1.0.0
        id: wait-for-build
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          checkName: pushContainer  # we use only Dev environment now
          ref: ${{ github.event.pull_request.head.sha || github.sha }}

      - name: Dispatch release
        uses: peter-evans/repository-dispatch@v1
        if: steps.wait-for-build.outputs.conclusion == 'success'
        with:
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          repository: dmtmov/workflow-researcher-2
          event-type: call-deploy
          client-payload: '{"version_tag": "${{ steps.latesttag.outputs.tag }}"}'

      - name: Do something with a failing build
        if: steps.wait-for-build.outputs.conclusion == 'failure'
        run: |
          echo "Fail"
